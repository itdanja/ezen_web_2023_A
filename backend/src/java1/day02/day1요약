chapter1
	기계어 : 0,1 로 이루어진 이진코드 ( 컴퓨터가 이해 )
	고급언어 : (사람중심)사람이 이해하기 쉬운 언어 [ C , JAVA , PYTHON , JS 등]
	저급언어 : (기계중심)컴퓨터가 이해하기 쉬운 언어 [ 어셈블리어 등 ]
	
	컴파일러 : 고급언어를 기계어로 번역 ( 다리 역할 )
	
	사람											컴퓨터 
	고급언어[JAVA] -----> 컴파일러[컴파일] --------> 기계어 파일
		JAVA파일작성		.java파일 실행ctrl+f11
		.java			.class
		프로젝트내src폴더	프로젝트내 bin폴더
		
	JAVA : 주로 소프트웨어 [ 전자정부 프레임워크 ]
	
	JAVA특징
		1. 모든 운영체제 실행 가능 [ 바이트 파일 ]
		2. 객체 지향 프로그래밍 
			1. 다형성 
		3. 메모리 자동 정리 [ JVM GC ]
		4. 무료 라이브러리 풍부
	
	--------------------------
	문법
		1. 패키지/폴더	: . 구분
		2. 주석 		: //한줄주석   /*여러줄주석*/
		3. ; 		: 하나의 명령어 단위 끝마침
			System.out.print("aaa");
			if( );{} [x]		for( int i = 0 ; i<3 ; i++ );{ } [x]
chapter2 

	변수란 : 하나의 값을 저장할 수 있는 메모리 번지에 붙인 이름 
	변수 선언 
		1. 타입 변수명 ;		[ 변수 선언시 초기값[처음값] 없으면 호출 불가능 ]
		2. 타입 변수명 = 초기값;	
	
			1. 기본 타입 : 미리 정해진 변수/상자 크기[메모리] *String 제외한 8가지 
				논리 boolean
				문자 char ' ' 문자열 String " "
				정수 byte short *int long
				실수 float *double 
				
				- 자동 타입 변환 
					byte -> short -> int -> long -> float -> double
					
				- 강제 타입 변환 [ *데이터 손실 ] : 다형성 특징 ( 캐스팅 ) * 7장
					byte <- short <- int <- long <- float <- double
					( 작은 허용범위 타입 )
					
				- 연산 자동 타입 변환
					피연산자가 큰 허용범위 타입이 있으면 결과도 해당 큰 허용범위 타입으로 반환 
					* byte, short --> int 결과
				
				- 문자열 --> 기본 타입 [ 
					* 기본타입을 클래스화된 기본타입클래스 사용 
					boolean.메소드() [x]  Boolean.메소드() [o]
					기본타입클래스명.parse~~~( 문자열 )
					
				- 기본타입 --> 문자열 타입 
					1. String.valueOf( )
					2. 기본타입데이터 + ""			:  + 연결연산자 		문자+문자->문자   숫자+문자->문자
					
				
			2. 변수명 : 컴퓨터가 변수저장시 메모리 번지/주소 사용하지만 개발자는 식별하기 위해 문자/이름
				1. 첫글자는 문자
				2. 첫글자는 숫자 불가
				3. 특수문자 $ _ 만 포함가능  
				- 관례/권장 ===> 카멜 표기법 
					클래스 			: SportsCar			Scanner
					객체/변수/배열/함수 : sportsCar		scanner 
			3. = 대입연산자 
				오른쪽 데이터를 왼쪽에 대입/저장 [ 기존 데이터 사라짐 ]
			4. 데이터
				!!!!!!!! : 타입의 허용범위내 데이터 
				
	- 리터럴 : 변수가 아닌 직접 작성된 데이터 
	
	제어/이스케이프 문자 : 문자열 안에서 사용되는 기능문자
		\" : "출력		\' : '출력		\\ : \출력	
		\t : 들여쓰기		\n : 줄바꿈 		\r : 캐리지리턴[커서 왼쪽 앞으로]
		
	- 출력 
		System.out.print()
		System.out.println()
		System.out.printf( "형식문자열" , 변수1/리터럴1 , 변수2/리터럴2)
		
	- 입력 
		- Scanner scanner = new Scanner( System.in );	// 입력객체 : { } 마다 1번 선언 // 키보드로부터 입력받은 바이트를 저장
		- 입력객체를 이용한 입력받은 값 호출할때 마다 // 객체내 저장된 바이트를 각 메소드에 맞춰 형변환해서 호출 
			scanner.nextBoolean()	
			scanner.next()
			scanner.nextByte()
			scanner.nextShort()
			scanner.nextInt()
			scanner.nextLong()
			scanner.nextFloat()
			scanner.nextDouble()
			
		
	
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	